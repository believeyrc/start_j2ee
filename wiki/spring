http://javasight.net/2011/05/jpa2-spring3-with-maven/
创建的web应用，那你可能需要使用的模块如下：
1.所有Core容器的：Beans(提供了简捷操作bean 的接口), Core, Context(构建在beans 包基础上，用来处理资源文件及国际化)和Expression Language
2.AOP
3.数据访问/集成: Transactions, ORM
4.Web中的：Web (web 核心包，提供了web 层接口. 即使你不使用SpringMVC，你可能也需要考虑使用web模块中的OpenEntityManagerInViewFilter)
5.Test	
6.web.servlet: web 层的一个具体实现包，DispatcherServlet也位于此包中

------------------------------------------------------------------AOP

<aop:aspectj-autoproxy proxy-target-class="true" />
或者:<bean class="org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator" />
	为Spring容器中那些匹配@AspectJ切面的Bean创建代理，其中的proxy-target-class="true" 表示使用CGLib动态代理技术织入增强，
	不过只声明还不行，还得织入，把编写好的切面类完整路径添加到配置文件中，这样才能发挥切面的功能


Spring-JDBC
JdbcTemplate主要提供以下五类方法：
	execute方法：用于执行任何SQL语句，一般用于执行DDL语句；
	update方法及batchUpdate方法：update方法用于执行新增、修改、删除等语句；batchUpdate方法用于执行批处理相关语句；
	query方法及queryForXXX方法：用于执行查询相关语句；
	call方法：用于执行存储过程、函数相关语句。

JdbcTemplate类支持的回调类：
	预编译语句及存储过程创建回调：用于根据JdbcTemplate提供的连接创建相应的语句；
		PreparedStatementCreator：通过回调获取JdbcTemplate提供的Connection，由用户使用该Conncetion创建相关的PreparedStatement；
		CallableStatementCreator：通过回调获取JdbcTemplate提供的Connection，由用户使用该Conncetion创建相关的CallableStatement；
	预编译语句设值回调：用于给预编译语句相应参数设值；
		PreparedStatementSetter：通过回调获取JdbcTemplate提供的PreparedStatement，由用户来对相应的预编译语句相应参数设值；
		BatchPreparedStatementSetter：；类似于PreparedStatementSetter，但用于批处理，需要指定批处理大小；
	自定义功能回调：提供给用户一个扩展点，用户可以在指定类型的扩展点执行任何数量需要的操作；
		ConnectionCallback：通过回调获取JdbcTemplate提供的Connection，用户可在该Connection执行任何数量的操作；
		StatementCallback：通过回调获取JdbcTemplate提供的Statement，用户可以在该Statement执行任何数量的操作；
		PreparedStatementCallback：通过回调获取JdbcTemplate提供的PreparedStatement，用户可以在该PreparedStatement执行任何数量的操作；
		CallableStatementCallback：通过回调获取JdbcTemplate提供的CallableStatement，用户可以在该CallableStatement执行任何数量的操作；
	结果集处理回调：通过回调处理ResultSet或将ResultSet转换为需要的形式；
		RowMapper：用于将结果集每行数据转换为需要的类型，用户需实现方法mapRow(ResultSet rs, int rowNum)来完成将每行数据转换为相应的类型。
		RowCallbackHandler：用于处理ResultSet的每一行结果，用户需实现方法processRow(ResultSet rs)来完成处理，在该回调方法中无需执行rs.next()，该操作由JdbcTemplate来执行，用户只需按行获取数据然后处理即可。
		ResultSetExtractor：用于结果集数据提取，用户需实现方法extractData(ResultSet rs)来处理结果集，用户必须处理整个结果集；
