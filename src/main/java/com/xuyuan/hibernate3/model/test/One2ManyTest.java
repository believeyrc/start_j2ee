package com.xuyuan.hibernate3.model.test;import java.util.HashSet;import java.util.Set;import org.hibernate.Session;import org.hibernate.Transaction;import com.xuyuan.hibernate3.model.Department;import com.xuyuan.hibernate3.model.Employee;import com.xuyuan.hibernate3.util.HibernateUtil;/** * 一个部门有多个员工，从部门这边来看,则用“一对多”的关系来表示这个关系 * dept.hbm.xml    	<set name="emps">			<key column="depart_id"></key>			<one-to-many class="Employee"/>		</set> * emp.hbm.xml * @author Administrator * */public class One2ManyTest {	public static void main(String[] args) {		Integer deptid = add();		query(deptid);	}	/**	select        emps0_.depart_id as depart3_1_1_,        emps0_.id as id1_,        emps0_.id as id2_0_,        emps0_.name as name2_0_,        emps0_.depart_id as depart3_2_0_    from        Employee emps0_    where        emps0_.depart_id=?	 * @param departId	 * @return	 */	static Department query(int departId) {		Session s = null;		try {			s = HibernateUtil.getSession();			Department depart = (Department) s.get(Department.class, departId);			System.out.println("employee size:" + depart.getEmps().size());			return depart;		} finally {			if (s != null)				s.close();		}	}	static Integer add() {		Session s = null;		Transaction tx = null;		try {			Department depart = new Department();			depart.setName("departName");			//多对一			Employee emp1 = new Employee();			emp1.setName("empName1");			emp1.setDepart(depart);			Employee emp2 = new Employee();			emp2.setName("empName2");			emp2.setDepart(depart);			//多了2条 update Employee  set  depart_id=?  where id=?			//一对多			Set<Employee> emps = new HashSet<Employee>();			emps.add(emp1);			emps.add(emp2);			depart.setEmps(emps);			s = HibernateUtil.getSession();			tx = s.beginTransaction();			Integer deptid = (Integer)s.save(depart); //insert into Department (name)  values (?)			s.save(emp1);//insert into Employee (name, depart_id)  values (?, ?)			s.save(emp2);//insert into Employee (name, depart_id)  values (?, ?)			tx.commit();			return deptid;		} finally {			if (s != null)				s.close();		}	}}