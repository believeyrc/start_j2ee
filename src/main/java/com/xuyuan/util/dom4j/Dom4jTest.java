package com.xuyuan.util.dom4j;import java.util.Iterator;import java.util.List;import java.util.Map;import java.util.Set;import org.dom4j.Attribute;import org.dom4j.Document;import org.dom4j.Element;public class Dom4jTest {	public static void main(String[] args) throws Exception {		// 主动创建Document		Document document = Dom4jUtil.createDocument();		Element root = document.getRootElement();				// 解析XML形式的文本		String xmlStr = "<?xml version='1.0' encoding='utf-8'?><conds name='ffcs'><id>0001</id><name>lily</name></conds>";		document = Dom4jUtil.StrToXMLDocment(xmlStr);		root = document.getRootElement();		System.out.println(root.getName() + ">" + root.attributeValue("name"));		System.out.println(root.elementText("id"));				//根节点下的id节点值				// 读取XML文件		document = Dom4jUtil.xmlFileToXMLDocument("D:/ws/users.xml");		root = document.getRootElement();		Element test = root.element("test");					//根节点下的test节点		System.out.println(test.getTextTrim());					//test节点值		System.out.println(root.elementTextTrim("any"));		//根节点下的any节点值					Element admin = root.element("admin").element("name");	//XML的层级关系,可以依次调用方法		System.out.println("admin name>>" + admin.getTextTrim());				// 取得根节点下的所有user节点		List users = root.elements("user");								for (Iterator it = users.iterator(); it.hasNext();) {			Element ele = (Element) it.next();			System.out.println("list1 user name>>" + ele.element("name").getTextTrim());		}				// 遍历某节点的所有属性		Element config = root.element("config");		for(Iterator it = config.attributeIterator(); it.hasNext();){            Attribute attr = (Attribute) it.next();            System.out.println("config attr>>" + attr.getName() + ":" + attr.getText());        }				// 对某节点下的所有子节点进行遍历		document = Dom4jUtil.xmlFileToXMLDocument("D:/ws/conds.xml");		root = document.getRootElement();		for(Iterator it = root.elementIterator(); it.hasNext(); ){			Element ele = (Element) it.next();			System.out.println("list 2 key value>>" + ele.getName() + ":" + ele.getTextTrim());        }				// 遍历节点下的所有子节点,取出非空节点 		Map map = Dom4jUtil.buildMap(document);		Set<String> key = map.keySet();        for (Iterator it = key.iterator(); it.hasNext();) {            String s = (String) it.next();            System.out.println(s + ">" +map.get(s));        }	}}