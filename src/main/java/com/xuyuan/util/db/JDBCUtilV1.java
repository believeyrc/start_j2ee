package com.xuyuan.util.db;import java.sql.Connection;import java.sql.DriverManager;import java.sql.PreparedStatement;import java.sql.ResultSet;import java.sql.SQLException;import java.sql.Statement;import java.util.Map;import java.util.ResourceBundle;/** * 数据库访问工具类，配置信息从属性文件中读取 * 单例实现 调用方式:Connection conn = DBUtil.getConnection(); * @author http://sarin.iteye.com * */public class JDBCUtilV1 {	private static String driver = "";	private static String url = "";	private static String username = "";	private static String password = "";	private static Connection conn = null;	private static Statement stmt = null;	private static PreparedStatement pstmt = null;	private static ResultSet rs = null;	//static代码块,加载配置文件	static {		ResourceBundle bundle = ResourceBundle.getBundle("application"); //读取application.properties文件		driver = bundle.getString("jdbc.driver");		url = bundle.getString("jdbc.url");		username = bundle.getString("jdbc.username");		password = bundle.getString("jdbc.password");	}	private JDBCUtilV1() {	}	public static Connection getConnection() {		try {			Class.forName(driver);			conn = DriverManager.getConnection(url, username, password);			System.out.println("connect success....");		} catch (Exception e) {			e.printStackTrace();		}		return conn;	}	/**	 * 查询	 * @param sql	 * @return	 */	public static ResultSet query(String sql){		try {			stmt = conn.createStatement();			rs = stmt.executeQuery(sql);		} catch (SQLException e) {			e.printStackTrace();		}		return rs;	}	/**	 * 预查询,需要传入参数	 */	public static ResultSet prepareQuery(String sql, Map params){		try {			pstmt = conn.prepareStatement(sql);			//pstmt.setString(1,params.get(""));			rs = stmt.executeQuery(sql);		} catch (SQLException e) {			e.printStackTrace();		}		return rs;	}	public static void main(String[] args) throws Exception{		//测试连接是否成功,打印connect success....则说明连接成功.		conn = JDBCUtilV1.getConnection();		long start = System.currentTimeMillis();		String sql = "select book_id,book_name from books where book_name like ?";        pstmt = conn.prepareStatement(sql);        pstmt.setString(1, "%book%");        rs = pstmt.executeQuery();        while(rs.next()){        	System.out.print("id:" + rs.getInt(1) + " name:" + rs.getString(2));        }        System.out.println("\npreparet query takes : " + (System.currentTimeMillis() - start));        start = System.currentTimeMillis();        sql = "select book_id,book_name from books where book_name like '%book%'";        rs = query(sql);        while(rs.next()){        	System.out.print("id:" + rs.getInt(1) + " name:" + rs.getString(2));        }        System.out.println("\npreparet query takes : " + (System.currentTimeMillis() - start));	}}