package com.xuyuan.util.web;import java.util.HashMap;import java.util.Map;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;/** * 使用本地线程变量的实例,代码来自改造的一个MVC框架片段,用于设置了request变量之后,再方便取出request变量 * @author Administrator * */public class ActionContext {	public static void main(String[] args) {		Map context = new HashMap();		//context.put("HttpServletRequest", request);		//context.put("HttpServletResponse", response);		context.put("HttpServletRequest", "request");		context.put("HttpServletResponse", "response");		ActionContext actionContext = new ActionContext(context);		ActionContext.setContext(actionContext);	}	private static ThreadLocal<ActionContext> actionContext = new ThreadLocal<ActionContext>();	/**	 * @uml.property  name="context"	 * @uml.associationEnd  qualifier="constant:java.lang.String java.lang.String"	 */	private Map<String, Object> context = null;	/**	 * 取得上下文的内容.	 * @return	 */	public static ActionContext getContext() {		return (ActionContext) actionContext.get();	}	/**	 * 设置上下文.	 * @param context	 */	public static void setContext(ActionContext context) {		actionContext.set(context);	}	/**	 * 初始化上下文环境.	 * @param context	 */	public ActionContext(Map<String, Object> context) {		this.context = context;	}	/**	 * 得到上下文.	 * @return	 */	public Map<String, Object> getContextMap() {		return context;	}	/**	 * 取得上下文中的值.	 * @param key	 * @return	 */	public Object get(String key) {		return context.get(key);	}	/**	 * 取得上下文中的HttpServletRequest对象.	 * @return	 */	public HttpServletRequest getHttpServletRequest() {		return (HttpServletRequest) context.get("HttpServletRequest");	}	/**	 * 取得上下文中的HttpServletResponse.	 * @return	 */	public HttpServletResponse getHttpServletResponse() {		return (HttpServletResponse) context.get("HttpServletResponse");	}}