<?xml version="1.0" encoding="UTF-8" ?><!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" ><sqlMap namespace="user" >	<!-- 别名:使用Bean作为类型(参数类型或者结果类型).resultClass,parameterClass使用该别名User -->	<typeAlias alias="User" type="com.xuyuan.ibatis.model.User" />		<!-- 自定义Map类型 -->	<typeAlias alias="parameterMap" type="com.xuyuan.ibatis.util.ParameterMap" />		<!-- 使用resultMap封装返回的结果类型,	1.注意只能用在select标签的resultMap里,不能用在resultClass里.	2.而且resultMap的值只能是这里定义好的.不能是别的,比如java.util.HashMap 	3.并且由class确定返回的类型是Bean,还是Map. -->  	<resultMap id="UserMap" class="com.xuyuan.ibatis.model.User" >		    	<result column="id" property="id" jdbcType="DECIMAL" />    	<result column="username" property="username" jdbcType="VARCHAR" />    	<result column="password" property="password" jdbcType="VARCHAR" />    	<result column="email" property="email" jdbcType="VARCHAR" />  	</resultMap>  	<resultMap id="UserMap2" class="java.util.HashMap" >    	<result column="id" property="id" jdbcType="DECIMAL" />    	<result column="username" property="username" jdbcType="VARCHAR" />    	<result column="password" property="password" jdbcType="VARCHAR" />    	<result column="email" property="email" jdbcType="VARCHAR" />  	</resultMap>    	<!-- 返回值:Bean或者HashMap -->  	<select id="getUsers" resultClass="User">				<!-- Bean -->        select * from user      </select>   	<select id="getUsers2" resultMap="UserMap">				<!-- Bean -->        select * from user      </select>    <select id="getUsers3" resultClass="java.util.HashMap">	<!-- Map -->        select id,username,password from user      </select>     	<select id="getUsers4" resultMap="UserMap2">			<!-- Map -->        select * from user      </select>      <!-- 错误的用法 -->    <!--    	<select id="getUsersX" resultClass="UserMap">	          select * from user      </select>     	<select id="getUsersXX" resultMap="java.util.HashMap">	          select * from user      </select>    -->       	<!-- 参数类型,如果是基本类型,可以是:Long;long(ibatis定义的类型),java.lang.Long(java类型). 	同理String,string,java.lang.String...	查询中只有一个参数,##中的变量名可以随便写. -->    <select id="selectByUserId" resultMap="UserMap" parameterClass="long" >    	select * from user where id = #var#  	</select>    <select id="selectByUserName" resultMap="UserMap" parameterClass="string" >    	select * from user where username like '%$username$%'    	<!-- select * from user where username like concat('%',#username#,'%') -->  	</select>    <select id="selectByNameMail" resultMap="UserMap" parameterClass="java.util.HashMap" >    	select * from user where username like '%$username$%' and email like '%$email$%'  	</select>    <select id="selectByNameMail_paramMap" resultMap="UserMap" parameterClass="parameterMap" >    	select * from user where username like '%$username$%' and email like '%$email$%'  	</select>      	<select id="selectByUser" resultMap="UserMap" parameterClass="User" >    	select id,username,password from user    	<dynamic prepend=" where " >      		<isNotNull prepend="or" property="id" >        		id = #id:DECIMAL#      		</isNotNull>      		<isNotNull prepend="or" property="username" >        		username = #username:VARCHAR#      		</isNotNull>    	</dynamic>  	</select>  	  	<insert id="insertUser" parameterClass="User" >  		<selectKey resultClass="java.lang.Long" type="pre" keyProperty="id" >   		SELECT max(id)+1 as id from user   		</selectKey>    	insert into user (id,username,password)values(#id#,#username#,#password#)  	</insert>  	<insert id="insertUser2" parameterClass="java.util.HashMap">  		<selectKey resultClass="java.lang.Long" type="pre" keyProperty="id" >   		SELECT max(id)+1 as id from user   		</selectKey>    	insert into user (id,username,password,email)values(#id#,#username#,#password#,#email#)  	</insert>  	  	<delete id="deleteByUserId" parameterClass="Long" >    	delete from user where id = #id#  	</delete></sqlMap>