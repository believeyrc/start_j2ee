package com.xuyuan.pager.model;/** * 分页Bean类设计: *  * 从分页说起: *  * 设计思路: *  * @author Administrator * */public class Pager {	private int totalRows; 			// 总行数:数据库查询到的总记录数	private int pageSize = 5; 		// 每页显示的行数:一般由页面传进来	private int totalPages; 		// 总页数:通过totalRows和pageSize可以计算出来		private int currentPage = 1; 	// 当前页号:根据分页动作来确定当前在第几页	private int startRow = 0; 		// 当前页在数据库中的起始行:根据currentPage和pageSize可确定数据库的起始记录(offset)	public Pager() {	}	public Pager(int totalRows) {		this.totalRows = totalRows;		//totalPages = totalRows % pageSize  > 0 ? totalRows / pageSize + 1 : totalRows / pageSize;		totalPages = totalRows / pageSize;		int mod = totalRows % pageSize;		if (mod > 0) {			totalPages++;		}				//TEST		System.out.println("总记录数:" + this.totalRows + ";总页数:" + totalPages);	}	public void first() {		currentPage = 1;		startRow = 0;		 		System.out.println("first>		当前页:" + this.currentPage + ";起始记录:" + startRow);	}	public void previous() {		if (currentPage == 1) {			return;		}		currentPage--;		startRow = (currentPage - 1) * pageSize;				System.out.println("previous>	当前页:" + this.currentPage + ";起始记录:" + startRow);	}	public void next() {		if (currentPage < totalPages) {			currentPage++;		}		startRow = (currentPage - 1) * pageSize;				System.out.println("next>		当前页:" + this.currentPage + ";起始记录:" + startRow);	}	public void last() {		currentPage = totalPages;		startRow = (currentPage - 1) * pageSize;				System.out.println("last>		当前页:" + this.currentPage + ";起始记录:" + startRow);	}	public void refresh(int _currentPage) {		currentPage = _currentPage;		if (currentPage > totalPages) {			last();		}				System.out.println("refresh>	当前页:" + this.currentPage + ";起始记录:" + startRow);	}	public int getTotalRows() {		return totalRows;	}	public void setTotalRows(int totalRows) {		this.totalRows = totalRows;	}		public int getPageSize() {		return pageSize;	}	public void setPageSize(int pageSize) {		this.pageSize = pageSize;	}	public int getTotalPages() {		return totalPages;	}	public void setTotalPages(int totalPages) {		this.totalPages = totalPages;	}		public int getCurrentPage() {		return currentPage;	}	public void setCurrentPage(int currentPage) {		this.currentPage = currentPage;	}		public void setStartRow(int startRow) {		this.startRow = startRow;	}	public int getStartRow() {		return startRow;	}}