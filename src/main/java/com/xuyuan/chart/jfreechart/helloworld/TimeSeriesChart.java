package com.xuyuan.chart.jfreechart.helloworld;import java.awt.BasicStroke;import java.awt.Color;import java.awt.Font;import java.io.FileOutputStream;import java.text.DecimalFormat;import java.text.SimpleDateFormat;import org.jfree.chart.ChartFactory;import org.jfree.chart.ChartUtilities;import org.jfree.chart.JFreeChart;import org.jfree.chart.axis.DateAxis;import org.jfree.chart.axis.NumberAxis;import org.jfree.chart.axis.PeriodAxis;import org.jfree.chart.axis.PeriodAxisLabelInfo;import org.jfree.chart.axis.ValueAxis;import org.jfree.chart.labels.StandardXYItemLabelGenerator;import org.jfree.chart.labels.StandardXYToolTipGenerator;import org.jfree.chart.plot.XYPlot;import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;import org.jfree.data.time.Day;import org.jfree.data.time.Month;import org.jfree.data.time.TimePeriodAnchor;import org.jfree.data.time.TimeSeries;import org.jfree.data.time.TimeSeriesCollection;import org.jfree.data.time.Year;import org.jfree.ui.RectangleInsets;public class TimeSeriesChart {    public static void main(String[] args) throws Exception {    	//单条曲线,只要加入一个TimeSeries即可.多条曲线,在同一个Collection加入多个TimeSeries对象        TimeSeries series1 = new TimeSeries("DAY");//默认是Day类型        series1.add(new Day(1,1,2012), 40);        series1.add(new Day(5,2,2012), 20);        series1.add(new Day(9,3,2012), 50);        TimeSeriesCollection collection = new TimeSeriesCollection();        collection.addSeries(series1);        collection.setXPosition(TimePeriodAnchor.MIDDLE);        JFreeChart chart = ChartFactory.createTimeSeriesChart("TimeSeries", "Time","Num", collection, true, true,false);        addNewY(chart);        setChartStyle(chart);        FileOutputStream fos = new FileOutputStream("/tmp/time-series.png");        ChartUtilities.writeChartAsPNG(fos, chart, 400, 300);    }    private static void addNewY(JFreeChart chart) {    	//不同的Collection,使用不用的Y轴显示.适用于Y轴单位不一样的情况        TimeSeriesCollection collection2 = new TimeSeriesCollection();        TimeSeries series2 = new TimeSeries("MONTH",Month.class);        series2.add(new Month(1,2012), 800);        series2.add(new Month(2,2012), 200);        series2.add(new Month(3,2012), 600);        collection2.addSeries(series2);        // 添加第2个Y轴,以此类推,可以增加N个Y轴.需要改变的是参数值1.2...        XYPlot plot = chart.getXYPlot();		NumberAxis axis2 = new NumberAxis("Second Axis");		axis2.setAxisLinePaint(Color.BLUE);		axis2.setLabelPaint(Color.BLUE);		axis2.setTickLabelPaint(Color.BLUE);		plot.setRangeAxis(1, axis2);		plot.setDataset(1, collection2);		plot.mapDatasetToRangeAxis(1, 1);		XYLineAndShapeRenderer render2 =  new XYLineAndShapeRenderer();		render2.setSeriesPaint(0, Color.BLUE);		plot.setRenderer(1, render2);	}	public static void setChartStyle(JFreeChart chart){    	XYPlot plot = chart.getXYPlot();		plot.setBackgroundPaint(Color.white);		plot.setDomainGridlinePaint(Color.GRAY);		plot.setRangeGridlinePaint(Color.GRAY);		plot.setDomainCrosshairVisible(true);		plot.setRangeCrosshairVisible(true);		plot.setDomainGridlinesVisible(true);		plot.setRangeGridlinesVisible(true);		//如果之前把Plot设为XYPlot类型的,这里又要转成CategoryPlot,就会报错.		//java.lang.ClassCastException: org.jfree.chart.plot.XYPlot cannot be cast to org.jfree.chart.plot.CategoryPlot		/**	    CategoryPlot categoryplot = (CategoryPlot)chart.getPlot();	    categoryplot.setBackgroundPaint(Color.white);	    categoryplot.setDomainGridlinePaint(Color.white);	    categoryplot.setRangeGridlinePaint(Color.white);	    categoryplot.setDomainGridlinesVisible(true);//水平网格线	    categoryplot.setRangeGridlinesVisible(true);//垂直网格线		CategoryAxis categoryaxis = categoryplot.getDomainAxis();        categoryaxis.setCategoryLabelPositions(CategoryLabelPositions.createUpRotationLabelPositions(1.57));//设置字体倾斜角度的        */		ValueAxis valueAxis = plot.getDomainAxis();		valueAxis.setTickLabelFont(new Font("宋体", Font.ITALIC, 11));// 设置x轴上面的字体		valueAxis.setLabelFont(new Font("宋体", Font.ITALIC, 11));// 设置X轴的标题文字		valueAxis.setUpperMargin(10);// 设置最高的一个 Item 与图片顶端的距离		valueAxis.setLowerMargin(0.05);// 设置最低的一个 Item 与图片底端的距离		valueAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());  //Y轴显示整数		valueAxis.setTickMarksVisible(true);		NumberAxis numberAxis = (NumberAxis) plot.getRangeAxis();// 设置y轴上的字体		numberAxis.setTickLabelFont(new Font("宋体", Font.PLAIN, 11));		numberAxis.setLabelFont(new Font("宋体", Font.PLAIN, 11));// 设置y轴上的标题字体		numberAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits()); //Y轴显示整数		XYLineAndShapeRenderer renderer = (XYLineAndShapeRenderer)plot.getRenderer();		renderer.setBaseShapesVisible(true);		renderer.setBaseItemLabelGenerator(new StandardXYItemLabelGenerator());		renderer.setBaseItemLabelsVisible(true); //在图标里显示数据值        renderer.setBaseToolTipGenerator(new StandardXYToolTipGenerator("{0} : {1} = {2}", new SimpleDateFormat("yyyy"), new DecimalFormat("0")));        //X轴第一行日期显示, X轴第二行月份显示        PeriodAxis periodaxis = new PeriodAxis("");        periodaxis.setAutoRangeTimePeriodClass(Day.class);        PeriodAxisLabelInfo aperiodaxislabelinfo[] = new PeriodAxisLabelInfo[2];        aperiodaxislabelinfo[0] = new PeriodAxisLabelInfo(Day.class, new SimpleDateFormat("d"),                 new RectangleInsets(2D, 2D, 2D, 2D), new Font("Arial", 1, 8),Color.BLACK, true, new BasicStroke(0.0F), Color.BLACK);        aperiodaxislabelinfo[1] = new PeriodAxisLabelInfo(Month.class, new SimpleDateFormat("yyyy-MM"),                 new RectangleInsets(2D, 2D, 2D, 2D), new Font("Simsum", 1, 10),Color.blue, false, new BasicStroke(0.0F), Color.lightGray);        periodaxis.setLabelInfo(aperiodaxislabelinfo);        plot.setDomainAxis(periodaxis);        //同理,如果之前转成了PeriodAxis类型,这里又要转成DateAxis也会报ClassCastException.只能存在一种.        /**		DateAxis axis = (DateAxis) plot.getDomainAxis();		if("month".equals(unit)){			axis.setDateFormatOverride(new SimpleDateFormat("yyyy-MM"));			axis.setTickUnit(new DateTickUnit(DateTickUnit.MONTH, 1));		}else if("hour".equals(unit)){			axis.setDateFormatOverride(new SimpleDateFormat("dd/hh"));			axis.setTickUnit(new DateTickUnit(DateTickUnit.HOUR, 4)); //在X轴上的间隔		}else if("day".equals(unit)){			axis.setDateFormatOverride(new SimpleDateFormat("MM-dd"));			axis.setTickUnit(new DateTickUnit(DateTickUnit.DAY, 1));		}else if("year".equals(unit)){			axis.setDateFormatOverride(new SimpleDateFormat("yyyy"));			axis.setTickUnit(new DateTickUnit(DateTickUnit.YEAR, 1));		}		*/    }}