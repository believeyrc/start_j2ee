package com.xuyuan.chart.jfreechart;import java.awt.Color;import java.awt.Dimension;import java.awt.Font;import java.awt.Toolkit;import java.awt.event.WindowAdapter;import java.awt.event.WindowEvent;import java.io.File;import java.io.FileOutputStream;import java.io.IOException;import org.jfree.chart.ChartFactory;import org.jfree.chart.ChartFrame;import org.jfree.chart.ChartUtilities;import org.jfree.chart.JFreeChart;import org.jfree.chart.axis.AxisLocation;import org.jfree.chart.axis.CategoryAnchor;import org.jfree.chart.axis.CategoryAxis;import org.jfree.chart.axis.NumberAxis;import org.jfree.chart.axis.ValueAxis;import org.jfree.chart.labels.ItemLabelAnchor;import org.jfree.chart.labels.ItemLabelPosition;import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;import org.jfree.chart.labels.StandardCategoryToolTipGenerator;import org.jfree.chart.plot.CategoryPlot;import org.jfree.chart.plot.DatasetRenderingOrder;import org.jfree.chart.plot.PlotOrientation;import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;import org.jfree.chart.renderer.category.LineAndShapeRenderer;import org.jfree.chart.title.TextTitle;import org.jfree.data.KeyToGroupMap;import org.jfree.data.category.CategoryDataset;import org.jfree.data.category.DefaultCategoryDataset;import org.jfree.ui.TextAnchor;/** * 创建柱状图 * * @author Administrator * */public class BarChart {	public static void main(String[] args) {		BarChart chart = new BarChart();		chart.createBarDemo("/tmp/bar.jpg");		chart.createBarChart("/tmp/bar2.jpg");	}	public void createBarChart(String jpgname) {		CategoryDataset dataset = getDataSet();		JFreeChart chart = ChartFactory.createBarChart(				"chart", // 图表标题				"type", // 目录轴的显示标签				"num", // 数值轴的显示标签				dataset, // 数据集				PlotOrientation.VERTICAL, // 图表方向：水平、垂直				true, // 是否显示图例(对于简单的柱状图必须是false)				true, // 是否生成工具				true // 是否生成URL链接		);		CategoryPlot plot = chart.getCategoryPlot();// 获得图表区域对象		// 设置图表的纵轴和横轴org.jfree.chart.axis.CategoryAxis		CategoryAxis domainAxis = plot.getDomainAxis();		domainAxis.setLowerMargin(0.1);// 设置距离图片左端距离此时为10%		domainAxis.setUpperMargin(0.1);// 设置距离图片右端距离此时为百分之10		domainAxis.setCategoryLabelPositionOffset(10);// 图表横轴与标签的距离(10像素)		domainAxis.setCategoryMargin(0.2);// 横轴标签之间的距离20%		// domainAxis.setMaximumCategoryLabelLines(1);		// domainAxis.setMaximumCategoryLabelWidthRatio(0);		// 设定柱子的属性		ValueAxis rangeAxis = plot.getRangeAxis();		rangeAxis.setUpperMargin(0.1);// 设置最高的一个柱与图片顶端的距离(最高柱的10%)		// 设置图表的颜色		org.jfree.chart.renderer.category.BarRenderer3D renderer;		renderer = new org.jfree.chart.renderer.category.BarRenderer3D();		renderer.setBaseOutlinePaint(Color.red);		renderer.setSeriesPaint(0, new Color(0, 255, 255));// 计划柱子的颜色为青色		renderer.setSeriesOutlinePaint(0, Color.BLACK);// 边框为黑色		renderer.setSeriesPaint(1, new Color(0, 255, 0));// 实报柱子的颜色为绿色		renderer.setSeriesOutlinePaint(1, Color.red);// 边框为红色		renderer.setItemMargin(0.1);// 组内柱子间隔为组宽的10%		// 显示每个柱的数值，并修改该数值的字体属性		renderer.setItemLabelGenerator(new StandardCategoryItemLabelGenerator());		renderer.setItemLabelFont(new Font("黑体", Font.BOLD, 12));// 12号黑体加粗		renderer.setItemLabelPaint(Color.black);// 字体为黑色		renderer.setItemLabelsVisible(true);		plot.setRenderer(renderer);// 使用我们设计的效果		// 设置纵横坐标的显示位置		plot.setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT);// 学校显示在下端(柱子竖直)或左侧(柱子水平)		plot.setRangeAxisLocation(AxisLocation.BOTTOM_OR_LEFT); // 人数显示在下端(柱子水平)或左侧(柱子竖直)		this.savejpg(chart, jpgname);	}	private static CategoryDataset getDataSet() {		DefaultCategoryDataset dataset = new DefaultCategoryDataset();		dataset.addValue(200, "计划", "清华大学");		dataset.addValue(400, "实报", "清华大学");		dataset.addValue(100, "计划", "天津大学");		dataset.addValue(205, "实报", "天津大学");		dataset.addValue(200, "计划", "郑州大学");		dataset.addValue(285, "实报", "郑州大学");		return dataset;	}	public void createBarDemo(String jpgname) {		CategoryDataset dataset = getBarDataset();		JFreeChart chart = ChartFactory.createStackedBarChart("月统计报表", "统计月份",				"数据", dataset, PlotOrientation.VERTICAL, true, true, false);		GroupedStackedBarRenderer groupedstackedbarrenderer = new GroupedStackedBarRenderer(); // 创建Renderer		KeyToGroupMap keytogroupmap = new KeyToGroupMap("G1"); // 创建若干组,以便可分柱状,和叠方图		keytogroupmap.mapKeyToGroup("计划", "G1"); // 目标为一组,实际,未完为另一组		keytogroupmap.mapKeyToGroup("实际", "G2");		keytogroupmap.mapKeyToGroup("未完", "G2");		groupedstackedbarrenderer.setSeriesToGroupMap(keytogroupmap);// 设置组		groupedstackedbarrenderer				.setBaseItemLabelGenerator(new StandardCategoryItemLabelGenerator());// 显示数值		groupedstackedbarrenderer.setBaseItemLabelsVisible(true);// 可见?		groupedstackedbarrenderer				.setPositiveItemLabelPositionFallback(new ItemLabelPosition(						ItemLabelAnchor.CENTER, TextAnchor.BOTTOM_CENTER));// 显示位置		groupedstackedbarrenderer.setItemMargin(0.05000000000000001D);		groupedstackedbarrenderer.setSeriesPaint(0, new Color(255, 137, 255)); // 设置显示颜色		groupedstackedbarrenderer.setSeriesPaint(1, new Color(0, 11, 220));// BLUE		groupedstackedbarrenderer.setSeriesPaint(2, new Color(0, 148, 52));// 绿色		CategoryPlot categoryplot = (CategoryPlot) chart.getPlot();		categoryplot.setDomainGridlinePosition(CategoryAnchor.MIDDLE);		categoryplot.setRangeGridlinesVisible(true);// 横网格线		categoryplot.setDomainGridlinesVisible(false);// 竖风格线		categoryplot.setRenderer(groupedstackedbarrenderer);		categoryplot.setDatasetRenderingOrder(DatasetRenderingOrder.FORWARD);		categoryplot.setDataset(1, dataset);		categoryplot.mapDatasetToRangeAxis(1, 1);		// categoryplot.mapDatasetToRangeAxis(1, 2);		CategoryAxis domainAxis = categoryplot.getDomainAxis();// 横轴		domainAxis.setCategoryMargin(0.2);// 间隔		// ValueAxis valueaxis = categoryplot.getRangeAxis();// 竖轴		// valueaxis.setRange(0.0D, 30000D);// 设置数值显示范围		NumberAxis numberaxis = new NumberAxis("费用");		// numberaxis.setRange(0,90000);		categoryplot.setRangeAxis(1, numberaxis);// 设置右边的Y轴		LineAndShapeRenderer lineandshaperenderer = new LineAndShapeRenderer();		lineandshaperenderer				.setBaseToolTipGenerator(new StandardCategoryToolTipGenerator());		lineandshaperenderer.setSeriesPaint(0, new Color(255, 137, 255)); // 粉红		lineandshaperenderer.setSeriesPaint(1, new Color(0, 11, 220)); // 蓝色		categoryplot.setRenderer(1, lineandshaperenderer);		categoryplot.setDatasetRenderingOrder(DatasetRenderingOrder.FORWARD);		this.savejpg(chart, jpgname);	}	// 获取柱状图数据	private CategoryDataset getBarDataset() {		DefaultCategoryDataset dataset = new DefaultCategoryDataset();		String plan = "plan";		String actual = "actual";		String leave = "leave";		dataset.addValue(2000, plan, "Jun");		dataset.addValue(500, actual, "Jun");		dataset.addValue(1500, leave, "Jun");		dataset.addValue(2000, plan, "July");		dataset.addValue(500, actual, "July");		dataset.addValue(1500, leave, "July");		dataset.addValue(5000, plan, "Mar");		dataset.addValue(3200, actual, "Mar");		dataset.addValue(1800, leave, "Mar");		return dataset;	}	// 保存为本地图片	private void savejpg(JFreeChart chart, String jpgname) {		FileOutputStream jpg = null;		try {			jpg = new FileOutputStream(jpgname);			ChartUtilities.writeChartAsJPEG(jpg, 0.5f, chart, 800, 500, null);		} catch (Exception e) {			e.printStackTrace();		} finally {			try {				jpg.close();			} catch (IOException e) {				e.printStackTrace();			}		}	}}