package com.xuyuan.chart.fusionchart.action;import java.util.HashMap;import java.util.List;import java.util.Map;import org.dom4j.Element;import com.xuyuan.chart.fusionchart.dao.BrowserDao;import com.xuyuan.util.xml.XMLUtil;/** * 使用Fusion Charts制作报表（dom4j生成XML） * @author http://sarin.iteye.com/blog/711494 *  * http://localhost:8888/start_j2ee/fusionchart.action?type=xml * 1.服务器端生成XML/JSON字符串：data = ... * 2.页面使用XML/JSON生成图表：chart.setDataXML('${data}');  chart.setJSONData('${data}'); */public class FusionChartAction{		/**	 * @uml.property  name="type"	 */	private String type;	/**	 * @uml.property  name="data"	 */	private String data;		//@Resource(name="browserDao")	/**	 * @uml.property  name="browserDao"	 * @uml.associationEnd  	 */	private BrowserDao browserDao;		public String chart() throws Exception {		System.out.println(type);		if(null != type && "json".equals(type)){			this.json();		}else{			this.xml();		}		return "chart";	}		private void xml(){		XMLUtil xml = new XMLUtil();		Element graph = xml.addRoot("graph");		xml.addAttribute(graph, "caption", "访问统计");		xml.addAttribute(graph, "basefontsize", "12");		xml.addAttribute(graph, "xAxisName", "浏览器类型");		xml.addAttribute(graph, "decimalPrecision", "0");	// 小数精确度，0为精确到个位		xml.addAttribute(graph, "showValues", "1");			// 在报表上不显示数值				List browserList = browserDao.getBrowserStat();		for (int i = 0; i < browserList.size(); i++) {			Map item = (HashMap) browserList.get(i);			Element set = xml.addNode(graph, "set");			set.addAttribute("name", (String) item.get("statVar"));			set.addAttribute("value", item.get("statCount").toString());			set.addAttribute("color", Integer.toHexString((int) (Math.random() * 255 * 255 * 255)).toUpperCase());		}		data = xml.getXML();		System.out.println(data);	}		/**	    {	    	"chart":{	    		"xAxisName":"浏览器","yAxisName":"数量","caption":"访问统计"	    	},	    	"data":[	    		{"label":"Safari","value":"6"},	    		{"label":"IE6","value":"16"},	    		{"label":"Other","value":"2"}	    	]	    }	 */	private void json() {		StringBuffer sb = new StringBuffer("{\"chart\":{");		sb.append("\"xAxisName\":" + "\"浏览器\"" + ",");		sb.append("\"yAxisName\":" + "\"数量\"" + ",");		sb.append("\"caption\":" + "\"访问统计\"");		sb.append("},\"data\":[");		List browserList = browserDao.getBrowserStat();		for (int i = 0; i < browserList.size(); i++) {			Map item = (HashMap) browserList.get(i);			sb.append("{\"label\":\"" + item.get("statVar").toString() + "\",\"value\":\"" + item.get("statCount").toString() + "\"},");		}		if(null != browserList){			sb.deleteCharAt(sb.lastIndexOf(","));		}		sb.append("]}");		data = sb.toString();		System.out.println(data);	}	/**	 * @return	 * @uml.property  name="data"	 */	public String getData() {		return data;	}	/**	 * @param browserDao	 * @uml.property  name="browserDao"	 */	public void setBrowserDao(BrowserDao browserDao) {		this.browserDao = browserDao;	}	/**	 * @return	 * @uml.property  name="type"	 */	public String getType() {		return type;	}	/**	 * @param type	 * @uml.property  name="type"	 */	public void setType(String type) {		this.type = type;	}	}