package com.xuyuan.tag.pager_taglib.action;import java.util.List;import javax.servlet.http.HttpServletRequest;import org.apache.struts2.ServletActionContext;import com.xuyuan.ssh.entity.base.User;import com.xuyuan.tag.pager_taglib.PageModel;import com.xuyuan.tag.pager_taglib.dao.UserDaoImpl;/** * 分页标签：pager-taglib使用指南	http://www.iteye.com/topic/25147	PageModel封装 * SSH pager-taglib分页的实现		http://www.iteye.com/topic/295084	内存分页和数据库分页list+total * 封装offset参数等TODO:			http://www.iteye.com/topic/626524 * @author XUYUANTREE */public class UserAction{	private UserDaoImpl userDaoImpl;	private List<User> list;	private int total;		private PageModel pm;	/**	 * 内存分页:一次性把List所有数据查出来,由pager-taglib自动分页.->pagerUser_mem.jsp	 */	public String memPage(){		list = userDaoImpl.findAllUser();		return "success";	}		/**	 * 数据库分页: <pg:pager>要有items属性	 * 方案1:	 * 在页面传递分页需要的参数,这里接收分页参数,进行数据库分页 	 * list和total分别要获取,并设置到页面.其中total用在分页标签里,list用在获取列表数据	 */	public String dbPage(){		HttpServletRequest request = ServletActionContext.getRequest();		int pageSize = 10;		int pageNo = 1;		try{			pageSize = Integer.parseInt(request.getParameter("pagesize"));			pageNo = Integer.parseInt(request.getParameter("pageNo"));		} catch (Exception e) {		}			list = userDaoImpl.findAllUser1((pageNo-1)*pageSize,pageSize);		total = userDaoImpl.findAllUserCount();				return "success";	}		/**	 * 数据库分页方案2:	 * 对上面方案1的改进,将list和total封装成一个对象.	 * 而且接收参数不是在页面上手动传递,而是接收pager-taglib自动封装好的pager.offset参数.	 */	public String execute(){		HttpServletRequest request = ServletActionContext.getRequest();		int offset = 0; 		try {			//参数pager.offset是pager-taglib自动传进来的			offset = Integer.parseInt(request.getParameter("pager.offset"));		} catch (Exception e) {		}				//每页显示多少条也可以在页面上自定义(方案1的pagesize),并在这里接收参数.这里我按照每页显示10条		//PageModel pm = userDaoImpl.findAllUser(offset, 10);		//request.setAttribute("pm", pm);		pm = userDaoImpl.findAllUser(offset, 10);				return "success";	}		public UserDaoImpl getUserDaoImpl() {		return userDaoImpl;	}	public void setUserDaoImpl(UserDaoImpl userDaoImpl) {		this.userDaoImpl = userDaoImpl;	}	public PageModel getPm() {		return pm;	}	public List<User> getList() {		return list;	}	public int getTotal() {		return total;	}}