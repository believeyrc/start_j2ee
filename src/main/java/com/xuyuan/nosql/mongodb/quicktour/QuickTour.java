package com.xuyuan.nosql.mongodb.quicktour;import java.net.UnknownHostException;import java.util.Date;import java.util.List;import java.util.Set;import com.mongodb.BasicDBObject;import com.mongodb.DB;import com.mongodb.DBCollection;import com.mongodb.DBCursor;import com.mongodb.DBObject;import com.mongodb.Mongo;import com.mongodb.MongoException;/** * http://www.mongodb.org/display/DOCS/Java+Tutorial * http://blog.csdn.net/lolinzhang/article/details/4353699 */public class QuickTour {	public static void main(String[] args) {		try {			//Mongo m = new Mongo();			//Mongo m = new Mongo( "localhost" );			Mongo m = new Mongo( "localhost" , 27017 );			DB db = m.getDB( "test" );//连接test数据库			//DB db = m.getDB( "orders" );			boolean auth = db.authenticate("root", "root".toCharArray());//Authentication (Optional)			Set<String> colls = db.getCollectionNames();//Getting A List Of Collections获取数据库中所有的表名			for (String s : colls) {			    System.out.print(s + "  ");			}	        for (String s : m.getDatabaseNames()) {//Getting A List of Databases>show dbs	            System.out.println(s);	        }	        //m.dropDatabase("mydb");//Dropping A Database			DBCollection coll = db.getCollection("foo");//Getting A Collection指向到某个表			System.out.println("\n"+coll.findOne());			BasicDBObject doc = new BasicDBObject();//Inserting a Document(JSON格式)	        doc.put("name", "MongoDB");	        doc.put("type", "database");	        doc.put("count", 1);	        BasicDBObject info = new BasicDBObject();		    info.put("x", 203);		    info.put("y", 102);	        doc.put("info", info);	        coll.insert(doc);	        System.out.println(coll.findOne(doc));	        for (int i=0; i < 100; i++) {	            //coll.insert(new BasicDBObject().append("i", i));//Adding Multiple Documents	        }	        System.out.println(coll.getCount());//Counting Documents in A Collection	        DBCursor cur = coll.find();//Using a Cursor to Get All the Documents	        while(cur.hasNext()) {	            //System.out.println(cur.next());	        }	        BasicDBObject query = new BasicDBObject();//Getting A Single Document with A Query	        query.put("i", 71);							//db.foo.find({i: 50});	        //query.put("i", new BasicDBObject("$gt", 50));	//db.foo.find({i: {$ne: 50}});	        cur = coll.find(query);	        query = new BasicDBObject();//db.things.find({j: {$ne: 3}, k: {$gt: 10} });	        query.put("j", new BasicDBObject("$ne", 3));	        query.put("k", new BasicDBObject("$gt", 10));	        cur = coll.find(query);	        query = new BasicDBObject();	        query.put("i", new BasicDBObject("$gt", 90));  // e.g. find all where i > 50	        //query.put("i", new BasicDBObject("$gt", 20).append("$lte", 30));  // i.e.   20 < i <= 30	        cur = coll.find(query);	        coll.createIndex(new BasicDBObject("i", 1));  // create index on "i", ascending	        List<DBObject> list = coll.getIndexInfo();	        for (DBObject o : list) {	            System.out.println(o);	        }	        //用DBObject存储JAVA对象	        Tweet myTweet = new Tweet();	        myTweet.put("user", 001);	        myTweet.put("message", "msg from javabean");	        myTweet.put("date", new Date());	        coll.insert(myTweet);	        //DBCollection.setObjectClass();	        coll.setObjectClass(Tweet.class);	        Tweet tweet = (Tweet)coll.findOne();	        System.out.println(tweet);		} catch (UnknownHostException e) {			e.printStackTrace();		} catch (MongoException e) {			e.printStackTrace();		}	}}