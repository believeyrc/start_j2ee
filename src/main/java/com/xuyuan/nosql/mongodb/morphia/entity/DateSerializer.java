package com.xuyuan.nosql.mongodb.morphia.entity;import java.io.IOException;import java.text.SimpleDateFormat;import java.util.Date;import org.codehaus.jackson.JsonGenerator;import org.codehaus.jackson.JsonProcessingException;import org.codehaus.jackson.map.JsonSerializer;import org.codehaus.jackson.map.SerializerProvider;/** * POJO实体中包含Date（日期）类型的数据。这类数据特别指定了它的序列化与反序列化方法. * 通过自定义序列化器，可以实现Java对象到JSON的数据格式自定义. * * Date的格式我们可以任意改写。上面的泛型类被具象为Date类型。重写了serialize方法。 * 输入的date参数就是将要被序列化的数据，jsonGenerator就是序列化的上下文。 * 当数据内容被整理好后将内容写入序列化的上下文中就完成了自定义过程。 * @author Administrator * */public class DateSerializer extends JsonSerializer<Date>{    @Override    public void serialize(Date date, JsonGenerator jsonGenerator, SerializerProvider serializerProvider)            throws IOException, JsonProcessingException {        SimpleDateFormat sdf= new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");        String formatedDate= sdf.format(date);        jsonGenerator.writeString(formatedDate);    }}