<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:security="http://www.springframework.org/schema/security"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/util 
        http://www.springframework.org/schema/util/spring-util-3.0.xsd
        http://www.springframework.org/schema/security 
        http://www.springframework.org/schema/security/spring-security-3.0.xsd">
        
    <!-- 5-7. Handling Domain Object Security -->
    <bean id="aclService" class="org.springframework.security.acls.jdbc.JdbcMutableAclService"> 
        <constructor-arg ref="dataSource" /> 
        <constructor-arg ref="lookupStrategy" /> 
        <constructor-arg ref="aclCache" /> 
        <property name="sidIdentityQuery" value="SELECT @@IDENTITY" /> 
        <property name="classIdentityQuery" value="SELECT @@IDENTITY" /> 
    </bean> 
        
	<bean id="aclCache" class="org.springframework.security.acls.domain.EhCacheBasedAclCache"> 
        <constructor-arg ref="aclEhCache" /> 
    </bean> 
 
    <bean id="aclEhCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean"> 
        <property name="cacheManager" ref="cacheManager" /> 
        <property name="cacheName" value="aclCache" /> 
    </bean> 
 
    <bean id="lookupStrategy" class="org.springframework.security.acls.jdbc.BasicLookupStrategy"> 
        <constructor-arg ref="dataSource" /> 
        <constructor-arg ref="aclCache" /> 
        <constructor-arg> 
            <bean class="org.springframework.security.acls.domain.AclAuthorizationStrategyImpl"> 
                <constructor-arg> 
                    <list> 
                        <ref local="adminRole" /> 
                        <ref local="adminRole" /> 
                        <ref local="adminRole" /> 
                    </list> 
                </constructor-arg> 
            </bean> 
        </constructor-arg> 
        <constructor-arg> 
            <bean class="org.springframework.security.acls.domain.ConsoleAuditLogger" /> 
        </constructor-arg> 
    </bean> 
 
    <bean id="adminRole" class="org.springframework.security.core.authority.GrantedAuthorityImpl"> 
        <constructor-arg value="ROLE_ADMIN" /> 
    </bean> 
 
    <!-- Making Access Control Decisions Based on ACLs -->
    <bean id="aclMessageDeleteVoter" class="org.springframework.security.acls.AclEntryVoter"> 
        <constructor-arg ref="aclService" /> 
        <constructor-arg value="ACL_MESSAGE_DELETE" /> 
        <constructor-arg> 
            <list> 
                <util:constant static-field="org.springframework.security.acls.domain.BasePermission.ADMINISTRATION" /> 
                <util:constant static-field="org.springframework.security.acls.domain.BasePermission.DELETE" /> 
            </list> 
        </constructor-arg> 
        <property name="processDomainObjectClass" value="com.xuyuan.spring3.recipes.security.board.domain.Message" /> 
    </bean>
    
    <bean id="aclAccessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased"> 
        <property name="decisionVoters"> 
            <list> 
                <bean class="org.springframework.security.access.vote.RoleVoter" /> 
                <ref local="aclMessageDeleteVoter" /> 
            </list> 
        </property> 
    </bean>
    
    <!-- Handling Domain Objects Returned from Methods   -->
    <!-- 
    <bean id="afterAclRead" class="org.springframework.security.acls.afterinvocation.AclEntryAfterInvocationProvider"> 
        <security:custom-after-invocation-provider /> 
        <constructor-arg ref="aclService" /> 
        <constructor-arg> 
            <list> 
                <util:constant static-field="org.springframework.security.acls.domain.BasePermission.ADMINISTRATION" /> 
                <util:constant static-field="org.springframework.security.acls.domain.BasePermission.READ" /> 
            </list> 
        </constructor-arg> 
    </bean> 
    <bean id="afterAclCollectionRead" class="org.springframework.security.acls.afterinvocation.AclEntryAfterInvocationCollectionFilteringProvider"> 
        <security:custom-after-invocation-provider /> 
        <constructor-arg ref="aclService" /> 
        <constructor-arg> 
            <list> 
                <util:constant static-field="org.springframework.security.acls.domain.BasePermission.ADMINISTRATION" /> 
                <util:constant static-field="org.springframework.security.acls.domain.BasePermission.READ" /> 
            </list> 
        </constructor-arg> 
    </bean>
     -->
</beans>        