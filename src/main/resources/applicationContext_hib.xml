<?xml version="1.0" encoding="UTF-8"?><beans xmlns="http://www.springframework.org/schema/beans"       xmlns:tx="http://www.springframework.org/schema/tx"       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"       xmlns:aop="http://www.springframework.org/schema/aop"       xsi:schemaLocation="            http://www.springframework.org/schema/beans            http://www.springframework.org/schema/beans/spring-beans.xsd            http://www.springframework.org/schema/aop            http://www.springframework.org/schema/aop/spring-aop.xsd            http://www.springframework.org/schema/tx            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">                <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">        <property name="configLocation">            <value>classpath:hibernate.cfg.xml</value>        </property>    </bean>        <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">        <property name="sessionFactory" ref="sessionFactory" />    </bean>        <!-- 事务控制:事务代理类[myloon] -->	<bean id="baseTransactionProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean" abstract="true">        <property name="transactionManager" ref="transactionManager" />        <property name="transactionAttributes">            <props>            	<!-- 此Demo中LevelService的命名规则范例: -->                <prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>                <prop key="persist*">PROPAGATION_REQUIRED,-Exception</prop>                <prop key="remove*">PROPAGATION_REQUIRED,-Exception</prop>                <prop key="disPlay*">PROPAGATION_REQUIRES_NEW</prop>            </props>        </property>    </bean>  	<!-- Level相关对象注入,事务控制采用事务代理类 -->    <bean id="levelService" parent="baseTransactionProxy">        <property name="target">            <bean class="com.xuyuan.extjs3.service.LevelService">                <property name="dao">                    <bean class="com.xuyuan.extjs3.dao.LevelDAO">                        <property name="sessionFactory" ref="sessionFactory" />                    </bean>                </property>            </bean>        </property>    </bean>    <bean id="levelAction" class="com.xuyuan.extjs3.action.LevelAction">        <property name="levelService" ref="levelService" />    </bean>        <!-- 事务控制:使用AOP[hoojo],因为LevelService已经使用事务代理了,为了过滤LevelService,对TreeServiceImpl采用AOP事务控制.实际中可能是service.*.*,可见整合到_ssh后的配置 -->	<aop:config>		<aop:pointcut id="filterMethod" expression="execution(* com.xuyuan.extjs3.service.*Impl.*(..))"/>		<aop:advisor advice-ref="txAdvice" pointcut-ref="filterMethod"/>	</aop:config>	<tx:advice id="txAdvice" transaction-manager="transactionManager">		<tx:attributes>			<tx:method name="add*" propagation="REQUIRED"/>			<tx:method name="edit*" propagation="REQUIRED"/>			<tx:method name="remove*" propagation="REQUIRED"/>			<tx:method name="execute*" propagation="REQUIRED"/>			<tx:method name="persist*" propagation="REQUIRED"/>			<tx:method name="*" read-only="false"/>		</tx:attributes>	</tx:advice>		<!-- Sort相关对象注入,事务控制采用AOP -->	<bean id="baseDao" class="com.xuyuan.extjs3.base.BaseDaoImpl">		<property name="sessionFactory" ref="sessionFactory"/>	</bean>	<bean id="treeDao" class="com.xuyuan.extjs3.dao.TreeDaoImpl">		<property name="dao" ref="baseDao"/>	</bean>	<bean id="treeService" class="com.xuyuan.extjs3.service.TreeServiceImpl">		<property name="dao" ref="treeDao"/>	</bean>	<bean id="treeAction" class="com.xuyuan.extjs3.action.TreeDemoAction">		<property name="treeService" ref="treeService"/>	</bean>	 </beans>