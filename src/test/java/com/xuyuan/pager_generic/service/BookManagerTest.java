package com.xuyuan.pager_generic.service;import static org.junit.Assert.assertTrue;import java.util.LinkedHashMap;import org.junit.Before;import org.junit.Test;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.test.context.ContextConfiguration;import org.springframework.test.context.junit4.AbstractTransactionalJUnit4SpringContextTests;import com.xuyuan.pager.entity.Books;import com.xuyuan.pager_generic.model.PageModel;import com.xuyuan.pager_generic.service.IBookManager;/** * 在封装好BaseDaoSupport的CRUD和分页工具类后,编写BookManager业务类. * 需要测试分页功能是否完善.这个测试应该在BookBaseAction前完成. *  * 已有的applicationContext_ssh.xml存在问题. 所以单独写了applicationContext_annotation.xml文件来加载. * 因为使用接口,不使用CGLib代理.所以不需要强制使用CGLib代理:proxy-target-class="true"否则会报错. * 	1.没有使用接口,错误	@Resource(name="bookManager") 	private BookManager bookManager; 	 org.springframework.beans.factory.BeanCreationException:   	Error creating bean with name 'com.xuyuan.ssh.service.book.BookManagerTest':Injection of resource dependencies failed;   nested exception is org.springframework.beans.factory.BeanNotOfRequiredTypeException:   	Bean named 'bookManager' must be of type [com.xuyuan.ssh.service.book.BookManager], but was actually of type [$Proxy20]  	 	2.没有使用接口,错误  	@Autowired 	private BookManager bookManager; 	  org.springframework.beans.factory.BeanCreationException:   	Error creating bean with name 'com.xuyuan.ssh.service.book.BookManagerTest':Injection of autowired dependencies failed;   nested exception is org.springframework.beans.factory.BeanCreationException:   	Could not autowire field: private com.xuyuan.ssh.service.book.BookManager com.xuyuan.ssh.service.book.BookManagerTest.bookManager;   nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException:   	No matching bean of type [com.xuyuan.ssh.service.book.BookManager] found for dependency:   	expected at least 1 bean which qualifies as autowire candidate for this dependency.   	Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}  	  3.正确的做法  	@Autowired		private IBookManager bookManager;		@Resource(name="bookManager")	private IBookManager bookManager;  4.BookManager上的注解:@Service  或者@Service(name="bookManager") 有没有加(name="bookManager")都是可以的.		动态代理:给applicationContext_annotation.xml的aop:config加上:proxy-target-class="true".则报错如下:java.lang.IllegalStateException: Failed to load ApplicationContext	at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:157)	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:321)	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:211)	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:288)	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:290)	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'bookManager' defined in file [D:\project\_EclipseProjects\start_j2ee\target\classes\com\xuyuan\ssh\service\book\BookManager.class]: Initialization of bean failed; nested exception is org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class [class com.xuyuan.ssh.service.book.BookManager]: Common causes of this problem include using a final class or a non-visible class; nested exception is net.sf.cglib.core.CodeGenerationException: java.lang.NullPointerException-->null	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:527)	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:585)	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:913)	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:464)	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:103)	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:1)	at org.springframework.test.context.support.DelegatingSmartContextLoader.loadContext(DelegatingSmartContextLoader.java:228)	at org.springframework.test.context.TestContext.loadApplicationContext(TestContext.java:124)	at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:148)	... 24 moreCaused by: org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class [class com.xuyuan.ssh.service.book.BookManager]: Common causes of this problem include using a final class or a non-visible class; nested exception is net.sf.cglib.core.CodeGenerationException: java.lang.NullPointerException-->null	at org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:207)	at org.springframework.aop.framework.ProxyFactory.getProxy(ProxyFactory.java:112)	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.createProxy(AbstractAutoProxyCreator.java:476)	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:362)	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:322)	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:407)	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1461)	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)	... 37 moreCaused by: net.sf.cglib.core.CodeGenerationException: java.lang.NullPointerException-->null	at net.sf.cglib.core.ReflectUtils.newInstance(ReflectUtils.java:235)	at net.sf.cglib.core.ReflectUtils.newInstance(ReflectUtils.java:220)	at net.sf.cglib.core.ReflectUtils.newInstance(ReflectUtils.java:216)	at net.sf.cglib.proxy.Enhancer.createUsingReflection(Enhancer.java:643)	at net.sf.cglib.proxy.Enhancer.firstInstance(Enhancer.java:538)	at net.sf.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:225)	at net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:377)	at net.sf.cglib.proxy.Enhancer.create(Enhancer.java:285)	at org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:201)	... 44 moreCaused by: java.lang.NullPointerException	at com.xuyuan.ssh.common.hibernate_pager.BaseDaoSupport.getEntityName(BaseDaoSupport.java:147)	at com.xuyuan.ssh.common.hibernate_pager.BaseDaoSupport.<init>(BaseDaoSupport.java:33)	at com.xuyuan.ssh.service.book.BookManager.<init>(BookManager.java:15)	at com.xuyuan.ssh.service.book.BookManager$$EnhancerByCGLIB$$37386d6d.<init>(<generated>)	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)	at net.sf.cglib.core.ReflectUtils.newInstance(ReflectUtils.java:228)	... 52 more	 *  *  * @author Administrator */@ContextConfiguration(locations = { "/applicationContext_pagerGeneric.xml" })public class BookManagerTest extends AbstractTransactionalJUnit4SpringContextTests{	@Autowired		private IBookManager bookManager;	@Before	public void setUp() throws Exception {	}	@Test	public void testGetScrollData1() {		PageModel<Books> scrollData = bookManager.getScrollData();		for (Books student : scrollData.getList()) {			System.out.println(student);		}		System.out.println(scrollData.getTotal());	}	@Test	public void testGetScrollData2() {		PageModel<Books> scrollData = bookManager.getScrollData(0, 5);		for (Books student : scrollData.getList()) {			System.out.println(student);		}		System.out.println(scrollData.getTotal());	}	@Test	public void testGetScrollData3() {		LinkedHashMap<String, String> orderby = new LinkedHashMap<String, String>();		orderby.put("bookId", "asc");		orderby.put("bookName", "desc");		PageModel<Books> scrollData = bookManager.getScrollData(0, 5, orderby);		for (Books student : scrollData.getList()) {			System.out.println(student);		}		System.out.println(scrollData.getTotal());	}	@Test	public void testGetScrollData4() {		PageModel<Books> scrollData = bookManager.getScrollData(0, 5, "o.bookName=? and o.bookAuthor=?", new Object[] { "test", "test" });		for (Books student : scrollData.getList()) {			System.out.println(student);		}		System.out.println(scrollData.getTotal());	}	@Test	public void testGetScrollData5() {		LinkedHashMap<String, String> orderby = new LinkedHashMap<String, String>();		orderby.put("bookId", "asc");		PageModel<Books> scrollData = bookManager.getScrollData(0, 5, "o.bookName=? and o.bookAuthor=?", new Object[] { "test", "test" }, orderby);		for (Books student : scrollData.getList()) {			System.out.println(student);		}		System.out.println(scrollData.getTotal());	}	@Test	public void testDelete() {		bookManager.delete(20);	}	@Test	public void testFindByName() {		String name = "李顺利";		for (Books student : bookManager.findByName(name)) {			System.out.println(student);			assertTrue(name.equals(student.getBookName()));		}	}	@Test	public void testSave() {		Books student = new Books("李顺利", "男");		bookManager.save(student);	}	@Test	public void testFindEntiey() {		Books student = new Books("李顺利", "男");		for (Books stu : bookManager.findByEntity(student)) {			System.out.println(stu);		}	}	@Test	public void testGetCount() {		System.out.println(bookManager.getCount());	}}