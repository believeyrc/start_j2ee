[MySQL 存储过程 批量插入]--批量循环插入十万条数据--Navicat for MySQL>选择Functions>右键New Function>选择Procedure>直接点击Finish--然后复制以下代码,保存成存储过程proc_insert_bigdata,接着执行该存储过程.BEGIN	DECLARE i int default 1;    WHILE(i < 100000) DO        insert into bigdata (id, name,pwd,email) values (i, concat('name_',i),CONCAT('pwd_',i), CONCAT('test',i,'@g.cn'));        SET i = i+1;    END WHILE;END[MySQL大数据量分页优化]MySQL分页语法:select * from table limit a,b		--返回a后b条记录	[a+1, a+b]select * from table limit b			--返回前b条记录 	[1,b]select * from table limit a,1		--返回第a+1条记录,因为b=1select * from table LIMIT 5,10; 	--返回第6-15行数据 select * from table LIMIT 5; 		--返回前5行 select * from table LIMIT 0,5; 		--返回前5行1.直接查询	Select * From bigdata limit 90000,1002.先取了前90001条记录,取其中最大一个ID值作为起始标识,因为数据经过order by 升序排列,所以从升序序列中max取到的是第90001条记录然后利用它可以快速定位下100条记录limit 100	Select * From bigdata Where ID>=(		Select Max(ID) From (	 		Select ID From bigdata Order By ID limit 90001		) As tmp	) limit 100;3.仅仅取90000条记录后1条,即第90001条记录,然后取ID值作起始标识定位下100条记录这也是为了定位到第90001条记录.	Select * From bigdata Where ID>=(		Select Max(ID) From (	 		Select ID From bigdata Order By ID limit 90000,1		) As tmp	) limit 100;4.直接利用第90000条记录的ID,不用经过Max运算,因为本身定位ID返回的就是1条记录.	Select * From bigdata Where ID>=(		Select ID From bigdata limit 90000,1	)limit 100;分页查询,其实都是为了定位到第N+1条记录.	|_______| |_______| |_______| |_______| ..id	1     100 101   200 201   300 301   400 ..N	↑         ↑         ↑         ↑	以下是几种查询的耗时(数据10万,单位:s):1	0.2032	0.1093	0.0784	0.078