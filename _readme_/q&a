---------------------------------------------------------------------------------------A.	Maven的一些问题:1.在Eclipse的build path里去掉JDK的依赖,即使在pom.xml配置maven-compile-plugin也不行.2.JUnit使用4版本,3.8版本不支持@Test.3.测试文件,最好在src/test文件夹下.==>eclipse source folder的设置.B.	JUnit的使用:在src/main/java中的业务类,new JUnit TestCase到src/test/java对应的路径下.C.	(编译项目时的)缓存:可以删除target下的所有文件.然后编译...D.	数据库的结合:E.	web.xml:web.xml最小化配置:见readme/web_min.xml.使用时注意要改名为:WEB-INF/web.xml.可访问的URL为: (struts的URL拦截为:/*)	http://localhost:8080/start_j2ee/						×	http://localhost:8080/start_j2ee/index.jsp				×	http://localhost:8080/start_j2ee/struts2index.action	√	http://localhost:8080/start_j2ee/ssj.action				√	http://localhost:8080/start_j2ee/ssj/index.jsp			√	http://localhost:8080/start_j2ee/extjs3/menu_demo.jsp	√	如果采用web_ssh.xml的配置,则可以正常启动服务器,但是访问时出错:No bean named 'sessionFactory' is defined. 说明没有正常加载到applicationContext.xml文件.???再次试验时发现没有问题了???	具体见readme_struts2#Q&A_1	ssh只能采用web_ssh.xml. 当然也可以访问到上面web_min.xml中配置的URL,除了部分*.jsp外. (struts的URL拦截为:*.action)	http://localhost:8080/start_j2ee/struts2/index.jsp		×	500	http://localhost:8080/start_j2ee/ssj/index.jsp			×	500	http://localhost:8080/start_j2ee/						√	http://localhost:8080/start_j2ee/index.jsp				√	http://localhost:8080/start_j2ee/struts2index.action	√	http://localhost:8080/start_j2ee/ssj.action				√	http://localhost:8080/start_j2ee/extjs3/menu_demo.jsp	√	500错误分析: 在jsp页面引用了struts2的标签.但是URL拦截为:*.action.所以报错500. 而index.jsp,menu_demo.jsp因为页面没有struts2的标签所以不会报错.以下是500的错误异常信息:2011-12-16 20:07:01.456:WARN::/start_j2ee/struts2/index.jspThe Struts dispatcher cannot be found.  This is usually caused by using Struts tags without the associated filter. Struts tags are only usable when the request has passed through its servlet filter, which initializes the Struts dispatcher needed for this tag. - [unknown location]总结:如果页面包含struts2标签,则该页面无法访问.URL在loing-index.jsp中大都给出了.	---------------------------------------------------------------------------------------SSH1.	启动项目报错:org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hibernateDao' defined in file 	[D:\project\_EclipseProjects\start_j2ee\target\classes\com\xuyuan\ssh\common\hibernate\HibernateDao.class]: Invocation of init method failed; nested exception is 	java.lang.IllegalArgumentException: 'sessionFactory' or 'hibernateTemplate' is requiredhttp://topic.csdn.net/u/20100415/13/9f359552-50c7-4d06-8b1b-2ed87a302d40.htmlhttp://blog.csdn.net/tangyajun_168/article/details/6736798在HibernateDao中加入如下代码:	@Autowired	public void setSessionFactory0(SessionFactory sessionFactory){		super.setSessionFactory(sessionFactory);	}或者在applicationContext.xml添加以下配置(当然只能其一了):	<bean id="hibernateDao" class="com.xuyuan.ssh.common.hibernate.HibernateDao">		<property name="sessionFactory" ref="sessionFactory"/>	</bean>	或者在applicationContext_ssh.xml中开beans的标签配置加入如下配置:default-autowire="byName" default-lazy-init="true"default-lazy-init:默认设置为false.会默认加载会默认加载整个对象实例图，从初始化ACTION配置、到 service配置到dao配置、乃至到数据库连接、事务等等。这样可以减少web服务器在运行时的负担，但是对于开发者来说无疑是效率极低的一个设置了。开发的时候可以把这个设置为:	default-lazy-init="true".http://www.haoziyanwo.com/?p=634default-autowire:applicationContext_hib.xml+applicationContext_ssh.xml:2.	单独整合applicationContext_hib.xml即在web.xml中去掉applicationContext_ssj,applicationContext_ssh.xml.如果不需要登陆applicationContext_ssh的登陆验证.可以注释掉登陆拦截器.直接访问[最上面给出的B.C.的]URL.	<!-- 	<interceptor-ref name="loginInterceptor">									<param name="excludeMethods">welcome,login</param>	</interceptor-ref>	-->3.	因为本项目中用到了很多技术.并且有很多配置文件.如果多个配置文件同时加载,会出现一些意外的现象.下面是applicationContext_hib.xml遇到的一些问题Unsatisfied dependency expressed through bean property 'eventListeners': : 	Error creating bean with name 'transactionManager' defined in class path resource [applicationContext_hib.xml]: 		Cannot resolve reference to bean 'sessionFactory' while setting bean property 'sessionFactory'; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: 	Error creating bean with name 'sessionFactory': 		FactoryBean which is currently in creation returned null from getObject; nested exception is org.springframework.beans.factory.BeanCreationException: http://efreedom.com/Question/1-1572067/Problem-Creating-Bean-SessionFactory-Spring-Hibernate-Configuration	A bit of Google searching suggests that this error message is usually the result of a circular dependency, and also led to a mailing list post that recommends removing default-autowire="detect" from your <beans> element.问题解决.	Google: default-autowire="detect"    spring circular dependency4.	当把所有的applicationContext都加进来时,又报错了:org.springframework.orm.hibernate3.HibernateQueryException: User is not mapped网上说是没有影射进来,在UserDao中加入完整的包名:com.xuyuan.ssh.entity.base.User但是加入后又报错:org.springframework.orm.hibernate3.HibernateQueryException: Position beyond number of declared ordinal parameters.哎,懒得解决了. 最好不好加载那么多的配置文件.... 如果能够整合在一块,最好都整合起来!好吧.我承认一开始把所有的可能有冲突的配置文件都加载进来是一种错误的选择了.5.	把_hib.xml配置文件整合到_ssh.xml中,packagesToScan也要添加,否则会出现访问JSON字符串时,数据为空.因为实体Bean根本就没映射到,数据就无法获取了.Finally,I have to say:GOOGLE is your best friend.[两种整合方案都经过试验,只需要把web.xml中的_hib.xml和_ssh.xml互换即可.]Spring+Hibernate集成方案1(applicationContext_hib.xml):Hibernate配置文件单独,所有的Bean要手动编码mapping到hibernate.cfg.xml中.这种方案跟Spring+JPA(ssj)类似,ssj是把Bean映射class到persistence.xml中.Spring+Hibernate集成方案2(applicationContext_ssh.xml):Hibernate的配置整合进Spring配置文件中.Spring对这种方式的整合,采取了packagesToScan方式来映射实体,这样不必像上面那样手动编码实体Bean.其实整合进Hibernate的目的是创建sessionFactory,并且因为采用JPA的方式,还要映射实体.由此引入下文的讨论...---------------------------------------------------------------------------------------