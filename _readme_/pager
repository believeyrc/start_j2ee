------------------------------------------------------------------分页初步Hibernate+Spring+Struts2整合开发中的一个分页显示方案	http://www.blogjava.net/rongxh7/archive/2008/11/29/243456.htmlcom.xuyuan.ssh.dao.book.IBooksDao,BooksDao:[持久层分页实现:] 	数据库方式分页,对于SQL其实是使用offSet和pageSize进行分页.Hibernate对分页的实现	采用传入offSet和pageSize分页参数,然后调用分页方法的SQL实现,即可完成数据库分页.		query.setFirstResult(offset);		query.setMaxResults(pageSize);	至此还没有引入分页模型.上面编写的是Dao层接口和实现.没有和分页模型挂钩.[参数说明:]	offSet:数据库中记录的起始位置,pageSize:每页显示多少条记录,[offSet,offSet+pageSize]即为当前页的记录数.[方法实现:]	List queryForPage(hql, offSet, pageSize)		hql为查询条件.带上分页参数,查询当前页的记录数	int getAllRowCount(hql)							得到总数,不需要分页参数.[业务层实现:]	com.xuyuan.ssh.service.book.IBooksService,BooksService:	业务层的实现要根据界面能够提供什么样的参数.分页首先要确定每页显示多少条即pageSize. 当点击分页按钮时,要能够确定当前在第几页.	queryForPage(pageSize, pageNo)		pageSize:每页显示多少条.		pageNo:当前在第几页.		在之前Dao的实现中有2个方法queryForPage和getAllRowCount来实现持久层的分页.	在业务层实现中可以把这两个方法返回的结果集进行封装,封装成分页模型.于是有了我们的分页模型.		既然要在业务类中要封装成分页模型,那么业务类就要调用Dao中的方法,传递给Dao需要的参数.我们由上面知道Dao需要offSet,pageSize.	pageSize已经可以直接传递.offSet可以根据pageNo当前页和pageSize进行计算得到.		由此我们可以得到最基本的分页模型:		List list;	list是通过queryForPage方法结果集		int total;	total是通过getAllRowCount方法的结果.	这个最基本的分页模型,在业务层对持久层分页实现的两个方法的封装.便于在视图层直接使用分页模型这个对象.	其实可以从com.xuyuan.tag.pager_taglib中看到为什么需要分页模型对象封装的原因.	另外我们在分页模型中还加入其它的属性...目的也是在视图层直接使用模型对象里的属性.比如要显示分页模型的其它信息等.[视图层实现:]	com.xuyuan.ssh.web.pager.PageBooksAction	http://localhost:8888/start_j2ee/pageBooks.action	分页相关的参数有:int page:当前页码.在分页工具栏的每个链接里都传入了page参数,Action就能接收到参数.	PageBean pageBean:调用上面业务层写好的分页方法(传入当前页码和每页条数),返回PageBean对象.	因为分页模型里封装好了List list,int total.这样分页模型对象就可以在页面中使用.遍历集合取出list里的数据.	至此分页已经可以正常地运用于数据中了. 但是目前仅仅是查询出全部数据,还缺少根据查询条件查询数据的分页.[带查询条件的分页:]	分析Dao的方法参数,还传递了HQL,而HQL中是可以带查询条件的.只不过我们上面业务层实现的分页方法没有带上查询条件而已.	可以重载BooksService的queryForPage方法,除了原来的pageSize和pageNo参数外,再加上查询条件和查询值就可以了.	而查询条件和查询值同样可以从视图层中传递进来. 		或者如果还不明白,看BooksDao其他方法.对不带查询条件的分页查询,以及带查询条件的分页查询进行了分解.[同样我们看到这里还没引入分页模型]	Dao和Service的方法实现都是在同样的类中:BooksDao,BooksService, 	com.xuyuan.ssh.web.pager.BooksAction		http://localhost:8888/start_j2ee/booklist.action------------------------------------------------------------------分页和泛型封装	